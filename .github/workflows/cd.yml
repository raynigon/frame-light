name: CD

on:
  push:
    tags: [ v* ]
  workflow_dispatch:

jobs:
  build_and_release:
    runs-on: ubuntu-20.04
    name: Build and Release Binaries
    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v2.1.0

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.24

      # Create dist directory
      - name: Create dist directory
        run: mkdir -p dist

      # Build for ARMv6
      - name: Build for ARMv6
        run: |
          GOOS=linux GOARCH=arm GOARM=6 go build -o dist/frame-light-armv6 cmd/main.go

      # Build for ARMv7
      - name: Build for ARMv7
        run: |
          GOOS=linux GOARCH=arm GOARM=7 go build -o dist/frame-light-armv7 cmd/main.go

      # Create a release and upload binaries
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        if: github.event_name != 'workflow_dispatch'
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload ARMv6 Binary
        uses: actions/upload-release-asset@v1
        if: github.event_name != 'workflow_dispatch'
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/frame-light-armv6
          asset_name: frame-light-armv6
          asset_content_type: application/octet-stream

      - name: Upload ARMv7 Binary
        uses: actions/upload-release-asset@v1
        if: github.event_name != 'workflow_dispatch'
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/frame-light-armv7
          asset_name: frame-light-armv7
          asset_content_type: application/octet-stream
